@{
    Layout = "_DashboardLayout";
    ViewBag.Title = "Category Management";
}
@using RepositoryLayer.Enums
@model IEnumerable<PhamNguyenTrongTuanMVC.Models.Category.CategoryViewModel>



<div class="col-md-12">
    <div class="card">
        <div class="card-header">
            <div class="d-flex align-items-center">
                <h4 class="card-title">Category Management</h4>
                <button class="btn btn-primary btn-round ms-auto" type="button" id="openCreateModal">
                    <i class="fa fa-plus"></i>
                    Create
                </button>
            </div>
        </div>
        <div class="card-body">
            <div id="modalContainer"></div>
            <div class="table-responsive">
                <table id="add-row"
                       class="display table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(n => n.CategoryId)</th>
                            <th>@Html.DisplayNameFor(n => n.CategoryName)</th>
                            <th>@Html.DisplayNameFor(n => n.CategoryDescription)</th>
                            <th>@Html.DisplayNameFor(n => n.NewsArticleCount)</th>
                            <th>@Html.DisplayNameFor(n => n.CategoryStatus)</th>
                            <th style="width: 10%; text-align: center">Action</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th>@Html.DisplayNameFor(n => n.CategoryId)</th>
                            <th>@Html.DisplayNameFor(n => n.CategoryName)</th>
                            <th>@Html.DisplayNameFor(n => n.CategoryDescription)</th>
                            <th>@Html.DisplayNameFor(n => n.NewsArticleCount)</th>
                            <th>@Html.DisplayNameFor(n => n.CategoryStatus)</th>
                        </tr>
                    </tfoot>
                    <tbody>
                        @foreach (var cateogory in Model)
                        {
                            <tr>
                                <td>@cateogory.CategoryId</td>
                                <td>@cateogory.CategoryName</td>
                                <td>@cateogory.CategoryDescription</td>
                                <td>@cateogory.NewsArticleCount</td>
                                <td><span class="@(cateogory.CategoryStatus != CategoryStatus.Inactive ? "badge badge-success" : "badge badge-danger")">@cateogory.CategoryStatus</span></td>
                                <td>
                                    <div class="form-button-action">
                                        <button type="button"
                                                data-categoryid="@cateogory.CategoryId"
                                                class="btn btn-link btn-primary btn-lg updateCategoryBtn"
                                                data-original-title="Edit Task">
                                            <i class="fa fa-edit"></i>
                                        </button>
                                        <button type="button"
                                                data-categoryid="@cateogory.CategoryId"
                                                class="btn btn-link btn-danger deleteCategoryBtn"
                                                data-original-title="Remove">
                                            <i class="fa fa-times"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
          $(document).on("click", ".deleteCategoryBtn", function(event) {
            event.preventDefault(); // Ngăn hành động mặc định

            var categoryId = $(this).data("categoryid");
            var url = "/Category/Delete/" + categoryId;
            swal({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                buttons: {
                    cancel: {
                        visible: true,
                        text: "No, cancel!",
                        className: "btn btn-danger"
                    },
                    confirm: {
                        text: "Yes, delete it!",
                        className: "btn btn-success"
                    }
                },
                dangerMode: true
            }).then((willDelete) => {
                if (willDelete) {
                    // Gọi action method Delete qua AJAX sử dụng $.post
                    $.post(url, {
                    }, function(response) {
                        swal("Deleted!", "Your category has been deleted.", "success")
                            .then(() => {
                                location.reload();
                            });
                    }, "html")
                    .fail(function(xhr, status, error) {
                        swal("Error!", "There was an error deleting the category.", "error");
                    });
                } else {

                    swal("Cancelled", "Your category is safe!", "info");
                }
            });
        });

        $(document).on("click", ".updateCategoryBtn", function(event) {
            $("#modalContainer").html("");
            var categoryId = $(this).data("categoryid");
            var url = "/Category/Edit/" + categoryId;
            $.get(url, function(data) {
               $("#modalContainer").html(data);
               $("#editCategoryModal").modal("show");
            });
        });

        $(document).on("click", "#updateCategoryButton", function(event){
            event.preventDefault();

            // Xử lý submit form qua AJAX
            var form = $("#updateCategoryForm");
            var url = form.attr("action");

            $.post(url, form.serialize(), function(data) {

                $("#editCategoryModal").modal("hide");
                var $container = $("<div>").html(data);
                var $modal = $container.find(".modal");

                if ($modal.length > 0) {
                    $("#editCategoryModal").replaceWith($modal);
                    $modal.modal("show");
                } else {
                    swal("Update Successfully!", "The category has been updated.", "success")
                            .then(() => {
                                location.reload();
                            });
                }
            }, "html");
        });

        $(document).on("click", "#addCategoryButton", function(event){
            event.preventDefault();

            // Xử lý submit form qua AJAX
            var form = $("#newCategoryForm");
            var url = form.attr("action");

            $.post(url, form.serialize(), function(data) {

                $("#addCategoryModal").modal("hide");
                var $container = $("<div>").html(data);
                var $modal = $container.find(".modal");

                if ($modal.length > 0) {
                    $("#addCategoryModal").replaceWith($modal);
                    $modal.modal("show");
                } else {swal("Create Successfully!", "New category has been created.", "success")
                            .then(() => {
                                location.reload();
                            });
                }
            }, "html");
        });
        $(document).ready(function () {

            $("#openCreateModal").click(function () {
                $.get("/Category/Add", function (data) {
                    $("#modalContainer").html(data);
                    $("#addCategoryModal").modal("show");
                });
            });

            $("")
        });
    </script>
}

