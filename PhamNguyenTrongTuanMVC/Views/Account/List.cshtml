@using Microsoft.AspNetCore.Mvc.TagHelpers
@using PhamNguyenTrongTuanMVC.Models.Account
@model ServiceLayer.Models.PaginatedList<PhamNguyenTrongTuanMVC.Models.Account.ViewAccountViewModel>
@{
    Layout = "_DashboardLayout";
    ViewBag.Title = "Accounts Management";
}

<div class="col-md-12">
    <div class="card">
        <div class="card-header">
            <div class="d-flex align-items-center">
                <h4 class="card-title">Accounts Management</h4>
                <button class="btn btn-primary btn-round ms-auto" type="button" id="openCreateModal">
                    <i class="fa fa-plus"></i>
                    Create
                </button>
            </div>
        </div>
        <div class="card-body">
            <div id="modalContainer"></div>
            <div class="table-responsive">
                <div id="add-row_wrapper" class="dataTables_wrapper container-fluid dt-bootstrap4">
                    <div class="row">
                        <form class="col-sm-12 col-md-12" asp-action="List" method="get">
                            <div id="add-row_filter" class="dataTables_filter">
                                <label>
                                    Search: <input name="SearchString" value="@ViewData["CurrentFilter"]" type="search" class="form-control form-control-sm" placeholder="" aria-controls="add-row" />
                                </label>
                            </div>
                        </form>
                    </div>

                    <div class="row mt-3">
                        <div class="col-sm-12 col-md-12">
                            <table id="add-row"
                                   class="display table table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th>Account Id</th>
                                        <th>Name</th>
                                        <th>Email</th>
                                        <th>Role</th>
                                        <th style="width: 10%; text-align: center">Action</th>
                                    </tr>
                                </thead>
                                <tfoot>
                                    <tr>
                                        <th>Account Id</th>
                                        <th>Name</th>
                                        <th>Email</th>
                                        <th>Role</th>
                                    </tr>
                                </tfoot>
                                <tbody>
                                    @foreach (var account in Model)
                                    {
                                        <tr>
                                            <td>@account.AccountId</td>
                                            <td>@account.AccountName</td>
                                            <td>@account.AccountEmail</td>
                                            <td>@account.AccountRole</td>
                                            <td>
                                                <div class="form-button-action">
                                                    <button type="button"
                                                            data-accountid="@account.AccountId"
                                                            class="btn btn-link btn-primary btn-lg updateAccountBtn"
                                                            data-original-title="Edit Task">
                                                        <i class="fa fa-edit"></i>
                                                    </button>
                                                    <button type="button"
                                                            data-accountid="@account.AccountId"
                                                            class="btn btn-link btn-danger alert_demo_8"
                                                            data-original-title="Remove">
                                                        <i class="fa fa-times"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <!-- #region Pagination -->
                    <div class="d-flex justify-content-between">
                        <div></div>
                        <ul class="pagination">
                            <li class="paginate_button page-item previous @(!Model.HasPreviousPage ? "disabled" : "")">
                                <a asp-action="List"
                                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                   asp-route-pageNumber="@(Model.PageIndex - 1)"
                                   tabindex="0" class="page-link">Previous</a>
                            </li>

                            @for (var i = 1; i <= Model.TotalPages; i++)
                            {
                                <li class="paginate_button page-item @(i == Model.PageIndex ? "active" : "")">
                                    <a asp-action="List"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                       asp-route-pageNumber="@i"
                                       tabindex="0" class="page-link">@i</a>
                                </li>
                            }

                            <li class="paginate_button page-item previous @(!Model.HasNextPage ? "disabled" : "")">
                                <a asp-action="List"
                                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                   asp-route-pageNumber="@(Model.PageIndex + 1)"
                                   tabindex="0" class="page-link">Next</a>
                            </li>
                        </ul>
                    </div>
                    <!-- #endregion -->

                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>

          $(document).on("click", ".alert_demo_8", function(event) {
            event.preventDefault(); // Ngăn hành động mặc định

            var accountId = $(this).data("accountid");
            var url = "/Account/Delete/" + accountId;
            swal({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                buttons: {
                    cancel: {
                        visible: true,
                        text: "No, cancel!",
                        className: "btn btn-danger"
                    },
                    confirm: {
                        text: "Yes, delete it!",
                        className: "btn btn-success"
                    }
                },
                dangerMode: true
            }).then((willDelete) => {
                if (willDelete) {
                    // Gọi action method Delete qua AJAX sử dụng $.post
                    $.post(url, {
                    }, function(response) {
                        console.log("+++++", response);
                        swal("Deleted!", "Your account has been deleted.", "success")
                            .then(() => {
                                location.reload();
                            });
                    }, "html")
                    .fail(function(xhr, status, error) {
                        swal("Error!", "There was an error deleting the account.", "error");
                    });
                } else {

                    swal("Cancelled", "Your account is safe!", "info");
                }
            });
        });

        $(document).on("click", ".updateAccountBtn", function(event) {
            $("#modalContainer").html("");
            var accountId = $(this).data("accountid");
            var url = "/Account/Edit/" + accountId;
            $.get(url, function(data) {
               $("#modalContainer").html(data);
               $("#editAccountModal").modal("show");
            });
        });

        $(document).on("click", "#updateAccountButton", function(event){
            event.preventDefault();

            // Xử lý submit form qua AJAX
            var form = $("#updateAccountForm");
            var url = form.attr("action");

            $.post(url, form.serialize(), function(data) {

                $("#editAccountModal").modal("hide");
                var $container = $("<div>").html(data);
                var $modal = $container.find(".modal");

                if ($modal.length > 0) {
                    $("#editAccountModal").replaceWith($modal);
                    $modal.modal("show");
                } else {
                    swal("Update Successfully!", "The account has been updated.", "success")
                            .then(() => {
                                location.reload();
                            });
                }
            }, "html");
        });

        $(document).on("click", "#addRowButton", function(event) {
            event.preventDefault();

            var form = $("#newAccountForm");
            var url = form.attr("action");

            $.post(url, form.serialize(), function(data) {
                // Khi submit thành công, ẩn modal và xử lý PartialView trả về nếu có
                $("#addRowModal").modal("hide");
                var $container = $("<div>").html(data);
                var $modal = $container.find(".modal");

                if ($modal.length > 0) {
                    $("#addRowModal").replaceWith($modal);
                    $modal.modal("show");
                } else {
                    swal("Create Successfully!", "New account has been created.", "success")
                        .then(() => {
                            location.reload();
                        });
                }
            }, "html")
            .fail(function(jqXHR, textStatus, errorThrown) {
                // Lấy thông báo lỗi từ responseText
                var errorMsg = jqXHR.responseText;
                swal("Bad request", errorMsg, "error");
            });
        });

        $(document).ready(function () {

            var action =
              '<td> <div class="form-button-action"> <button type="button" data-bs-toggle="tooltip" title="" class="btn btn-link btn-primary btn-lg" data-original-title="Edit Task"> <i class="fa fa-edit"></i> </button> <button type="button" data-bs-toggle="tooltip" title="" class="btn btn-link btn-danger" data-original-title="Remove"> <i class="fa fa-times"></i> </button> </div> </td>';


            $("#openCreateModal").click(function () {
                $.get("/Account/Add", function (data) {
                    $("#modalContainer").html(data);
                    $("#addRowModal").modal("show");
                });
            });

            // Khi nhấn Enter trong input search
            $('input[name="SearchString"]').on('keypress', function(e){
                if(e.which === 13) { // 13 là mã của phím Enter
                    e.preventDefault(); // Ngăn submit mặc định nếu cần
                    $(this).closest('form').submit();
                }
            });

            // Khi mất focus (blur) khỏi input search
            $('input[name="SearchString"]').on('blur', function(){
                // Có thể kiểm tra điều kiện nếu cần (ví dụ: không submit nếu giá trị trống)
                if($(this).val().trim() !== ""){
                    $(this).closest('form').submit();
                }
            });

        });
    </script>
}
