@model IEnumerable<PhamNguyenTrongTuanMVC.Models.Account.ViewAccountViewModel>
@{
    Layout = "_DashboardLayout";
    ViewBag.Title = "Accounts Management";
}

<div class="col-md-12">
    <div class="card">
        <div class="card-header">
            <div class="d-flex align-items-center">
                <h4 class="card-title">Add Row</h4>
                <button class="btn btn-primary btn-round ms-auto" type="button" id="openCreateModal">
                    <i class="fa fa-plus"></i>
                    Add Row
                </button>
            </div>
        </div>
        <div class="card-body">
            <div id="modalContainer"></div>
            <div class="table-responsive">
                <table id="add-row"
                       class="display table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(n => n.AccountId)</th>
                            <th>@Html.DisplayNameFor(n => n.AccountName)</th>
                            <th>@Html.DisplayNameFor(n => n.AccountEmail)</th>
                            <th>@Html.DisplayNameFor(n => n.AccountRole)</th>
                            <th style="width: 10%">Action</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th>@Html.DisplayNameFor(n => n.AccountId)</th>
                            <th>@Html.DisplayNameFor(n => n.AccountName)</th>
                            <th>@Html.DisplayNameFor(n => n.AccountEmail)</th>
                            <th>@Html.DisplayNameFor(n => n.AccountRole)</th>
                        </tr>
                    </tfoot>
                    <tbody>
                        @foreach (var account in Model)
                        {
                            <tr>
                                <td>@account.AccountId</td>
                                <td>@account.AccountName</td>
                                <td>@account.AccountEmail</td>
                                <td>@account.AccountRole</td>
                                <td>
                                    <div class="form-button-action">
                                        <button type="button"
                                                data-accountid="@account.AccountId"
                                                class="btn btn-link btn-primary btn-lg updateAccountBtn"
                                                data-original-title="Edit Task">
                                            <i class="fa fa-edit"></i>
                                        </button>
                                        <button type="button"
                                                data-accountid="@account.AccountId"
                                                class="btn btn-link btn-danger alert_demo_8"
                                                data-original-title="Remove">
                                            <i class="fa fa-times"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
          $(document).on("click", ".alert_demo_8", function(event) {
            event.preventDefault(); // Ngăn hành động mặc định

            var accountId = $(this).data("accountid");
            var url = "/Account/Delete/" + accountId;
            swal({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                buttons: {
                    cancel: {
                        visible: true,
                        text: "No, cancel!",
                        className: "btn btn-danger"
                    },
                    confirm: {
                        text: "Yes, delete it!",
                        className: "btn btn-success"
                    }
                },
                dangerMode: true
            }).then((willDelete) => {
                if (willDelete) {
                    // Gọi action method Delete qua AJAX sử dụng $.post
                    $.post(url, {
                       // nếu cần token
                    }, function(response) {
                        console.log("+++++", response);
                        swal("Deleted!", "Your account has been deleted.", "success")
                            .then(() => {
                                location.reload();
                            });
                    }, "html")
                    .fail(function(xhr, status, error) {
                        swal("Error!", "There was an error deleting the account.", "error");
                    });
                } else {
                    swal("Cancelled", "Your account is safe!", "info");
                }
            });
        });

        $(document).on("click", ".updateAccountBtn", function(event) {
            $("#modalContainer").html("");
            var accountId = $(this).data("accountid");
            var url = "/Account/Edit/" + accountId;
            $.get(url, function(data) {
               $("#modalContainer").html(data);
               $("#editAccountModal").modal("show");
            });
        });

        $(document).on("click", "#updateAccountButton", function(event){
            event.preventDefault();

            // Xử lý submit form qua AJAX
            var form = $("#updateAccountForm");
            var url = form.attr("action");

            $.post(url, form.serialize(), function(data) {

                $("#editAccountModal").modal("hide");
                var $container = $("<div>").html(data);
                var $modal = $container.find(".modal");

                if ($modal.length > 0) {
                    $("#editAccountModal").replaceWith($modal);
                    $modal.modal("show");
                } else {
                    swal("Update Successfully!", "The account has been updated.", "success")
                            .then(() => {
                                location.reload();
                            });
                }
            }, "html");
        });

        $(document).on("click", "#addRowButton", function(event){
            event.preventDefault();

            // Xử lý submit form qua AJAX
            var form = $("#newAccountForm");
            var url = form.attr("action");

            $.post(url, form.serialize(), function(data) {

                $("#addRowModal").modal("hide");
                var $container = $("<div>").html(data);
                var $modal = $container.find(".modal");

                if ($modal.length > 0) {
                    $("#addRowModal").replaceWith($modal);
                    $modal.modal("show");
                } else {swal("Create Successfully!", "New account has been created.", "success")
                            .then(() => {
                                location.reload();
                            });
                }
            }, "html");
        });
        $(document).ready(function () {

            var action =
              '<td> <div class="form-button-action"> <button type="button" data-bs-toggle="tooltip" title="" class="btn btn-link btn-primary btn-lg" data-original-title="Edit Task"> <i class="fa fa-edit"></i> </button> <button type="button" data-bs-toggle="tooltip" title="" class="btn btn-link btn-danger" data-original-title="Remove"> <i class="fa fa-times"></i> </button> </div> </td>';


            $("#openCreateModal").click(function () {
                $.get("/Account/Add", function (data) {
                    $("#modalContainer").html(data);
                    $("#addRowModal").modal("show");
                });
            });
        });
    </script>
}